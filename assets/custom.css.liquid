:root {
    --padding-card: 1rem;    
}

.RTE summary {
  padding: 0.2em;
  padding-left: 1em;
  background-color: #eee;    
}

.card figure {
    border-radius: var(--rounded-box) var(--rounded-box) 0 0;    
}
.index-page .prose {
    max-width: 100%;
}
.prose figure img {
    margin-top: 0;
    margin-bottom: 0;
}
.checkmark::before {
  content: url("data:image/svg+xml,%3Csvg fill='%2340C057' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24px' height='24px'%3E%3Cpath d='M11.707,15.707C11.512,15.902,11.256,16,11,16s-0.512-0.098-0.707-0.293l-4-4c-0.391-0.391-0.391-1.023,0-1.414 s1.023-0.391,1.414,0L11,13.586l8.35-8.35C17.523,3.251,14.911,2,12,2C6.477,2,2,6.477,2,12c0,5.523,4.477,10,10,10s10-4.477,10-10 c0-1.885-0.531-3.642-1.438-5.148L11.707,15.707z'/%3E%3C/svg%3E");  
  display: inline-block;
  margin-left: 5px;
  vertical-align: top;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

.collection-row-container {
    display: grid;
    grid-template-columns: repeat({{ settings.secProdRowAmount | def:"4" }}, minmax(calc(1375px / {{ settings.secProdRowAmount | def:"4" }}), 1fr));    
    overflow-x: auto;
}

{% if settings.border_radius != blank%}
body {
  --rounded-box: {{settings.border_radius}}rem;
  --rounded-btn: calc( var(--rounded-box) * 0.5);
  --rounded-badge: var(--rounded-box);
  --tab-radius: calc( var(--rounded-box) * 0.25);
}
{% endif %}

{% unless settings.closed_daisysignup_true %}
form label {
    display:block;
    font-size: 0.8em;
    text-align: left;
    padding: 0 0.5em
}
{% endunless %}

.skip-link {
  position: absolute;
  transform: translateY(-100%);
}
.skip-link:focus {
  transform: translateY(0%);
}

/* RTE styles */
.RTE [data-block=layout] {
    display: flex;
    flex-direction: row;
    gap: 24px;
}
@media (max-width: 640px) {
    .RTE [data-block=layout] {
       flex-direction: column;
    }
}

.RTE .wrap-center {
  text-align: center;
}
.RTE .wrap-center img {
  margin-left: auto;
  margin-right: auto;
}
.RTE .wrap-center figcaption {
  text-align: center;
  margin-left: auto;
  margin-right: auto;
}
.RTE .float-left {
  float: left;
  margin-right: 1em;
  margin-bottom: 1em;
  max-width: 200px;
}
.RTE .float-right {
  float: right;
  margin-left: 1em;
  margin-bottom: 1em;
  max-width: 200px;
}
.RTE {
    --rte-outset-md: 10rem;
}
.RTE .outset-right,
.RTE .outset-left,
.RTE .outset-both
{
  max-width: 100vw;
  margin: 0;
}
.RTE .outset-right {
  position: relative;
  width: calc(100% + var(--rte-outset-md));
  transform: translateX(var(--rte-outset-md)) translate3d(0, 0, 0);
  left: calc(var(--rte-outset-md) * -1);
}
.RTE .outset-left {
  width: calc(100% + var(--rte-outset-md));
  transform: translateX(calc(var(--rte-outset-md) * -1)) translate3d(0, 0, 0);
}
.RTE .outset-both {
  position: relative;
  width: calc(100% + var(--rte-outset-md) + var(--rte-outset-md));
  transform: translateX(-50%) translate3d(0, 0, 0);
  left: 50%;
}
.RTE .embed-responsive {
  position: relative;
  overflow: hidden;
  width: 100%;
}
.RTE .embed-responsive::after {
  display: block;
  content: "";
  padding-top: 56.25%;
}
.RTE .embed-responsive iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
/* daisyUI form design  */
form label {
    white-space: nowrap;
    color: color-mix(in oklab,currentColor 60%,transparent);
    align-items: center;
    gap: .375rem;
}

input[type="text"],
input[type="tel"],
input[type="date"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="time"],
input[type="url"],
input[type="week"]
{
    cursor: text;
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 2);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;    
    --size: calc(var(--size-field, 0.25rem) * 10);
    align-self: center;
}
input[type="submit"],
input[type="reset"]{
    margin: 0 auto;
    margin-top: 1em;
    margin-bottom: 0.5em; 
    padding: 0.5em;
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.375rem);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);  
    width: clamp(3rem, 20rem, 100%);
    display: inline-block;
}
input[type="checkbox"] {
    &:checked, &[aria-checked="true"] {
      &::before { 
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;  
    }}   
}
input[type="checkbox"] { 
  &::before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentColor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }    
}
input[type="checkbox"]  {
    &:checked, &[aria-checked="true"] {
      background-color: var(--input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
    }
}
input[type="checkbox"]{
    padding: 0.25rem;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    border: var(--border) solid var(--input-color, var(--color-base-content));    
}
input[type="radio"]{
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--input-color, currentColor);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, currentColor);
}
input[type="radio"] {
    &::before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: calc(infinity * 1px);
      --tw-content: "";
      content: var(--tw-content);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
  }
input[type="radio"] {
    &:checked, &[aria-checked="true"] {
      &::before {
        background-color: currentColor;
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      }
    }
}
input[type="range"] {
    &::-moz-range-track {
      background-color: var(--range-bg);
      border-radius: var(--radius-selector);
      width: 100%;
      height: calc(var(--range-thumb-size)*.5);
    }
}
input[type="range"] {
    &::-moz-range-thumb {
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--range-p),var(--radius-selector-max)));
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      border: var(--range-p)solid;
      color: var(--range-progress);
      box-shadow: 0 -1px oklch(0% 0 0/calc(var(--depth)*.1))inset,0 8px 0 -4px oklch(100% 0 0/calc(var(--depth)*.1))inset,0 1px color-mix(in oklab,currentColor calc(var(--depth)*10%),#0000),0 0 0 2rem var(--range-thumb)inset,calc((var(--range-dir,1)*-100rem) - (var(--range-dir,1)*var(--range-thumb-size)/2))0 0 calc(100rem*var(--range-fill));
      background-color: currentColor;
      position: relative;
      top: 50%;
    }
}
input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    --range-thumb: var(--color-base-100);
    --range-thumb-size: calc(var(--size-selector,.25rem)*6);
    --range-progress: currentColor;
    --range-fill: 1;
    --range-p: .25rem;
    --range-bg: color-mix(in oklab,currentColor 10%,#0000);
    cursor: pointer;
    vertical-align: middle;
    --radius-selector-max: calc(var(--radius-selector) + var(--radius-selector) + var(--radius-selector));
    border-radius: calc(var(--radius-selector) + min(var(--range-p),var(--radius-selector-max)));
    width: clamp(3rem,20rem,100%);
    height: var(--range-thumb-size);
    background-color: #0000;
    border: none;
    overflow: hidden;
}
textarea {
    border: var(--border) solid #0000;
    min-height: calc(0.25rem * 20);
    flex-shrink: 1;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-block: calc(0.25rem * 2);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    padding-inline-start: 0.75rem;
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    touch-action: manipulation;
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;    
    align-self: center;
}
select {
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px, 4px 4px;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-field, 0.25rem) * 10);
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
}
/**/
